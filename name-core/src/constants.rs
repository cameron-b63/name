use crate::{
    instruction::OpFunct,
    instruction_information::{ArgumentType, InstructionInformation, InstructionType},
};

const NUM_OF_REGISTERS: usize = 32;

pub const REGISTERS: [&'static str; NUM_OF_REGISTERS] = [
    "$zero", "$at", "$v0", "$v1", "$a0", "$a1", "$a2", "$a3", "$t0", "$t1", "$t2", "$t3", "$t4",
    "$t5", "$t6", "$t7", "$s0", "$s1", "$s2", "$s3", "$s4", "$s5", "$s6", "$s7", "$t8", "$t9",
    "$k0", "$k1", "$gp", "$sp", "$fp", "$ra",
];

pub const INSTRUCTION_SET: &[InstructionInformation] = &[
    InstructionInformation {
        mnemonic: "add",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(32),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "addi",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(8),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "addiu",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(9),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "addu",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(33),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "and",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(36),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "andi",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(12),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "beq",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(4),
        args: &[
            ArgumentType::Rs,
            ArgumentType::Rt,
            ArgumentType::BranchLabel,
        ],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "bgtz",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(7),
        args: &[ArgumentType::Rs, ArgumentType::BranchLabel],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "blez",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(6),
        args: &[ArgumentType::Rs, ArgumentType::BranchLabel],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "bne",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(5),
        args: &[
            ArgumentType::Rs,
            ArgumentType::Rt,
            ArgumentType::BranchLabel,
        ],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "j",
        instruction_type: InstructionType::JType,
        op_funct: OpFunct::OpCode(2),
        args: &[ArgumentType::BranchLabel],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "jal",
        instruction_type: InstructionType::JType,
        op_funct: OpFunct::OpCode(3),
        args: &[ArgumentType::BranchLabel],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "jalr",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(9),
        args: &[ArgumentType::Rd, ArgumentType::Rs],
        alt_args: Some(&[&[ArgumentType::Rs]]),
    },
    InstructionInformation {
        mnemonic: "jr",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(8),
        args: &[ArgumentType::Rs],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "lb",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(32),
        args: &[ArgumentType::Rt, ArgumentType::Immediate, ArgumentType::Rs],
        alt_args: Some(&[
            &[ArgumentType::Rt, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier, ArgumentType::Rs],
        ]),
    },
    InstructionInformation {
        mnemonic: "lui",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(15),
        args: &[ArgumentType::Rt, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "lw",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(35),
        args: &[ArgumentType::Rt, ArgumentType::Immediate, ArgumentType::Rs],
        alt_args: Some(&[
            &[ArgumentType::Rt, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier, ArgumentType::Rs],
        ]),
    },
    /*
      Instruction::InstructionInformation {
        mnemonic: "mfhi",
        instruction_type: InstructionType::RType,
        opcode: None,
        funct: Some(16),
        args: &[ArgumentType::Rd],
        alt_args: None,
    },
      Instruction::InstructionInformation {
        mnemonic: "mflo",
        instruction_type: InstructionType::RType,
        opcode: None,
        funct: Some(18),
        args: &[ArgumentType::Rd],
        alt_args: None,
    },
    */
    InstructionInformation {
        mnemonic: "nor",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(39),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "nop",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(0),
        args: &[],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "or",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(37),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "ori",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(13),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "sb",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(40),
        args: &[ArgumentType::Rt, ArgumentType::Immediate, ArgumentType::Rs],
        alt_args: Some(&[
            &[ArgumentType::Rt, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier],
        ]),
    },
    InstructionInformation {
        mnemonic: "sll",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(0),
        args: &[ArgumentType::Rd, ArgumentType::Rt, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "slt",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(42),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "slti",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(10),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "sltiu",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(11),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "sltu",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(43),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "srl",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(2),
        args: &[ArgumentType::Rd, ArgumentType::Rt, ArgumentType::Immediate],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "sub",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(34),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "subu",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(35),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "sw",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(43),
        args: &[ArgumentType::Rt, ArgumentType::Immediate, ArgumentType::Rs],
        alt_args: Some(&[
            &[ArgumentType::Rt, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier, ArgumentType::Rs],
            &[ArgumentType::Rt, ArgumentType::Identifier],
        ]),
    },
    InstructionInformation {
        mnemonic: "syscall",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(12),
        args: &[],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "xor",
        instruction_type: InstructionType::RType,
        op_funct: OpFunct::Funct(38),
        args: &[ArgumentType::Rd, ArgumentType::Rs, ArgumentType::Rt],
        alt_args: None,
    },
    InstructionInformation {
        mnemonic: "xori",
        instruction_type: InstructionType::IType,
        op_funct: OpFunct::OpCode(14),
        args: &[ArgumentType::Rt, ArgumentType::Rs, ArgumentType::Immediate],
        alt_args: None,
    },
];
